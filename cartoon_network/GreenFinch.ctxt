#BlueJ class context
comment0.target=GreenFinch
comment0.text=\n\ <p>A\ simplified\ version\ of\ the\ finch\ object.\ If\ you\ want\ the\ full\n\ capabilities\ of\ the\ finch\ object\ then\ you\ can\ call\ the\ \n\ getFinchObject()\ method\ which\ returns\ the\ original\ finch\ \n\ backing\ this\ GreenFinch.</p>\n\ <p>This\ class\ is\ a\ singleton\ class,\ you\ don't\ create\ new\ instances\n\ of\ it\ since\ there's\ only\ one\ Greenfinch.\ Instead,\ call\ the\ \n\ get()\ method\ like\ so\:</p>\n\ <pre>GreenFinch\ finch\ \=\ GreenFinch.get();</pre>\n\ <p>You\ can\ then\ call\ any\ of\ the\ desired\ methods\ on\ this\ \n\ finch.</p>\n\ @author\ Michael\ Berry\ (mjrb4)\n\ @version\ 01/12/11\n
comment1.params=
comment1.target=GreenFinch()
comment10.params=
comment10.target=double\ getTemperature()
comment10.text=\n\ Get\ the\ current\ temperature\ as\ measured\ by\ the\ finch\n\ in\ degrees\ celcius.\n\ @return\ the\ finch's\ temperature.\n
comment11.params=
comment11.target=int\ getLightLevel()
comment11.text=\n\ Get\ the\ overall\ light\ level\ as\ measured\ by\ the\ finch.\n\ @return\ the\ current\ light\ level,\ between\ 0\ and\ 100\n\ (0\ being\ very\ dark\ and\ 100\ being\ very\ light.)\n
comment12.params=
comment12.target=int\ getLeftLightLevel()
comment12.text=\n\ Get\ the\ left\ light\ level\ as\ measured\ by\ the\ finch.\n\ @return\ the\ current\ light\ level,\ between\ 0\ and\ 100\n\ (0\ being\ very\ dark\ and\ 100\ being\ very\ light.)\n
comment13.params=
comment13.target=int\ getRightLightLevel()
comment13.text=\n\ Get\ the\ right\ light\ level\ as\ measured\ by\ the\ finch.\n\ @return\ the\ current\ light\ level,\ between\ 0\ and\ 100\n\ (0\ being\ very\ dark\ and\ 100\ being\ very\ light.)\n
comment14.params=freq\ duration
comment14.target=void\ buzz(int,\ int)
comment14.text=\n\ Tell\ the\ finch\ to\ buzz\ at\ the\ given\ frequency\ for\ a\ \n\ certain\ amount\ of\ time.\ The\ range\ of\ human\ hearing\ is\n\ around\ 20Hz\ to\ 20,000Hz,\ so\ pick\ a\ value\ in\ this\ range.\n\ @param\ frequency\ Hz\ that\ the\ finch\ should\ buzz\ at.\n\ @param\ duration\ length\ of\ time\ the\ buzz\ should\ \n\ occur\ for,\ in\ ms\ (1000ms\ \=\ 1s.)\n
comment15.params=left\ right
comment15.target=void\ setWheelSpeeds(int,\ int)
comment15.text=\n\ Set\ the\ left\ and\ right\ wheel\ speeds\ of\ the\ finch.\ The\ \n\ values\ are\ taken\ between\ -100\ and\ 100;\ -100\ is\ full\ \n\ speed\ backwards,\ 0\ is\ stopped\ and\ 100\ is\ full\ speed\ \n\ forwards.\n\ @param\ left\ the\ speed\ of\ the\ left\ wheel.\n\ @param\ right\ the\ speed\ of\ the\ right\ wheel.\n
comment16.params=
comment16.target=void\ start()
comment16.text=\n\ Start\ the\ finch.\n
comment17.params=b
comment17.target=void\ write(int)
comment18.params=
comment18.target=boolean\ safestart()
comment19.params=
comment19.target=void\ stop()
comment19.text=\n\ Stop\ the\ finch.\n
comment2.params=
comment2.target=GreenFinch\ get()
comment2.text=\n\ Get\ the\ instance\ of\ the\ GreenFinch.\ Call\ this\ instead\n\ of\ using\ the\ constructor.\n\ @return\ the\ GreenFinch\ singleton\ instance.\n
comment20.params=
comment20.target=edu.cmu.ri.createlab.terk.robot.finch.Finch\ getFinchObject()
comment20.text=\n\ Get\ the\ finch\ object\ underlying\ this\ GreenFinch.\n\ @return\ the\ raw\ finch\ object.\n
comment3.params=
comment3.target=double\ getXAcceleration()
comment3.text=\n\ Get\ the\ value\ of\ the\ X\ acceleration\ the\ finch\ is\n\ currently\ experiencing.\n\ @return\ the\ accelerometer's\ X\ value.\n
comment4.params=
comment4.target=double\ getYAcceleration()
comment4.text=\n\ Get\ the\ value\ of\ the\ Y\ acceleration\ the\ finch\ is\n\ currently\ experiencing.\n\ @return\ the\ accelerometer's\ Y\ value.\n
comment5.params=
comment5.target=double\ getZAcceleration()
comment5.text=\n\ Get\ the\ value\ of\ the\ Z\ acceleration\ the\ finch\ is\n\ currently\ experiencing.\n\ @return\ the\ accelerometer's\ Z\ value.\n
comment6.params=
comment6.target=boolean\ isLeftHit()
comment6.text=\n\ Determine\ if\ the\ left-hand\ infrared\ sensor\n\ is\ registering\ something\ directly\ in\ front\ of\ it.\n\ @return\ true\ if\ the\ left-hand\ sensor\ is\ registering\n\ a\ collision,\ false\ otherwise.\n
comment7.params=
comment7.target=boolean\ isRightHit()
comment7.text=\n\ Determine\ if\ the\ right-hand\ infrared\ sensor\n\ is\ registering\ something\ directly\ in\ front\ of\ it.\n\ @return\ true\ if\ the\ right-hand\ sensor\ is\ registering\n\ a\ collision,\ false\ otherwise.\n
comment8.params=color
comment8.target=void\ setLED(java.awt.Color)
comment8.text=\n\ Set\ the\ LED\ on\ board\ the\ finch\ to\ a\ certain\ color.\n\ @param\ color\ the\ colour\ to\ set\ the\ finch's\ LED\ to.\n
comment9.params=red\ green\ blue
comment9.target=void\ setLED(int,\ int,\ int)
comment9.text=\n\ Set\ the\ LED\ on\ board\ the\ finch\ to\ a\ certain\ color.\n\ @param\ red\ Intensity\ of\ the\ red\ LED\ (range\ is\ 0-255)\n\ @param\ green\ Intensity\ of\ the\ green\ LED\ (range\ is\ 0-255)\n\ @param\ blue\ Intensity\ of\ the\ blue\ LED\ (range\ is\ 0-255)\n
numComments=21
